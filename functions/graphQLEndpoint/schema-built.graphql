directive @embedded on OBJECT
directive @collection(name: String!) on OBJECT
directive @index(name: String!) on FIELD
directive @resolver(name: String, paginated: Boolean! = false) on FIELD
directive @relation(name: String) on FIELD
directive @unique(index: String) on FIELD
scalar Date

scalar Long

type Message {
  _id: ID!
  _ts: Long!
  author: String
  text: String
}

input MessageInput {
  author: String
  text: String
}

type MessagePage {
  data: [Message]!
  after: String
  before: String
}

type Mutation {
  updateUser(
    id: ID!
    data: UserInput!
  ): User
  createUser(data: UserInput!): User!
  updateMessage(
    id: ID!
    data: MessageInput!
  ): Message
  createMessage(data: MessageInput!): Message!
  deleteMessage(id: ID!): Message
  deleteUser(id: ID!): User
}

type Query {
  findUserByID(id: ID!): User
  findMessageByID(id: ID!): Message
  messages(
    _size: Int
    _cursor: String
  ): MessagePage!
}

scalar Time

type User {
  _id: ID!
  _ts: Long!
  username: String!
  password: String
}

input UserInput {
  username: String!
  password: String
}